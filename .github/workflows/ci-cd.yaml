name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

env:
  AWS_REGION: us-west-2

jobs:
  ci:
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd="pg_isready -U testuser -d testdb"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r auth-service/requirements-test.txt
          pip install -r auth-service/requirements.txt
          pip install -r users-api/requirements.txt

      - name: Lint all services
        run: |
          flake8 auth-service/src
          flake8 users-api/src

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for Postgres to be ready..."
          for i in {1..20}; do
            pg_isready -h postgres -p 5432 -U testuser -d testdb && break
            echo "Postgres not ready yet..."
            sleep 3
          done

      - name: Run all tests
        env:
          DATABASE_URL: postgresql+asyncpg://testuser:testpass@postgres:5432/testdb
        run: |
          export PYTHONPATH="$(pwd)/auth-service/src"
          echo "PYTHONPATH = $PYTHONPATH"
          python -m pytest -v -s ./auth-service/tests

      - name: Build Docker images (local)
        run: |
          services=("auth-service" "users-api")
          for service in "${services[@]}"; do
            docker build -t gilbr/$service:latest $service/
          done

  cd:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker images
        run: |
          services=("auth-service" "users-api")
          for service in "${services[@]}"; do
            echo "Building $service"
            docker build -t gilbr/$service:latest $service/
            echo "Pushing $service"
            docker push gilbr/$service:latest
          done

      - name: Terraform Init & Apply
        run: |
          cd infra/terraform
          terraform init
          terraform apply -auto-approve
