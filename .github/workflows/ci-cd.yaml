name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:   # CD

env:
  AWS_REGION: us-west-2

jobs:
  ci:
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install flake8 pytest mypy
          pip install -r auth-service/requirements.txt
          pip install -r users-api/requirements.txt

      - name: Lint and test all services
        run: |
          flake8 auth-service/src
          flake8 users-api/src
          pytest auth-service/tests
          pytest users-api/tests

      - name: Build Docker images
        run: |
          services=("auth-service" "users-api")
          for service in "${services[@]}"; do
            docker build -t gilbr/$service:latest $service/
          done
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  cd:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # Solo CD manual
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker images
        run: |
          services=("auth-service" "users-api")
          for service in "${services[@]}"; do
            echo "Building $service"
            docker build -t gilbr/$service:latest $service/
            echo "Pushing $service"
            docker push gilbr/$service:latest
          done
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Terraform Init & Apply
        run: |
          cd infra/terraform
          terraform init
          terraform apply -auto-approve
          