flowchart TD
    cloud[Cloud Microservices]

    subgraph github[".github"]
        workflows --> ci_cd[ci-cd.yaml]
    end

    subgraph auth_service["Auth Service"]
        subgraph alembic
            versions[versions]
            env_template[env-template.py]
            readme_alembic[README]
        end
        subgraph infra
            subgraph auth_iam
                subgraph auth_iam_policies
                    policies_template[policies-template]
                    auth_secret_policy[auth-secret-policy-template.json]
                    trust_policies[trust-policies-template]
                    trust_policy[trust-policy-template.json]
                    policies_template --> auth_secret_policy
                    trust_policies --> trust_policy
                end
            end
            subgraph auth_k8s_dev
                deployment_dev[deployment-dev.yaml]
                namespace_dev[namespace-dev.yaml]
                service_dev[service-dev.yaml]
                serviceAccount_dev[serviceAccount-dev.yaml]
            end
            subgraph auth_dev_db
                secret_db[secret-db-dev-template.yaml]
                service_db[service-db-dev.yaml]
                statefulset_db[statefulSet-db-dev.yaml]
            end
            subgraph auth_prod_templates
                deployment_prod[deployment-prod-template.yaml]
                namespace_prod[namespace-prod-template.yaml]
                service_prod[service-prod-template.yaml]
                serviceAccount_prod[serviceAccount-prod.yaml]
            end
        end
        subgraph src
            init_src[__init__.py]
            auth_py[auth.py]
            database_py[database.py]
            logger_py[logger.py]
            main_py[main.py]
            models_py[models.py]
            schemas_py[schemas.py]
            utils_py[utils.py]
        end
        subgraph tests
            init_tests[__init.py__]
            conftest[conftest.py]
            test_endpoints[test_endpoints.py]
        end
        alembic_ini[alembic.ini]
        requirements_test[requirements-test.txt]
        requirements[requirements.txt]
        terraform_secret[terraform-secret-template.json]
    end

    subgraph monitoring["Monitoring"]
        subgraph grafana
            configmap_grafana[configmap-grafana.yaml]
            deployment_grafana[deployment-grafana.yaml]
            pvc_grafana[pvc-grafana.yaml]
            secret_grafana[template-secre-t.yaml]
            service_grafana[service-grafana.yaml]
        end
        subgraph loki
            configmap_loki[configmap-loki.yaml]
            deployment_loki[deployments-loki.yaml]
            statefulset_loki[statefulset-loki.yaml]
            pvc_loki[pvc-loki.yaml]
            secret_loki[template-secre-t.yaml]
            service_loki[service-loki.yaml]
            values_loki[values.yaml]
        end
        subgraph prometheus
            configmaps_prometheus[configmaps-prometheus.yaml]
            deployment_prometheus[deployment-prometheus.yaml]
            pvc_prometheus[pvc-prometheus.yaml]
            secret_prometheus[template-secre-t.yaml]
            service_prometheus[service-prometheus.yaml]
            prometheus_rbac[prometheus-rbac.yaml]
            service_monitor[service-monitor-dev.yaml]
        end
    end

    subgraph terraform["Terraform"]
        terraform_lock[.terraform.lock.hcl]
        main_tf[main.tf]
        outputs_tf[outputs.tf]
        tfvars_example[terraform.tfvars.example]
    end

    subgraph user_api["User API"]
        deployment_users[users-api-deployment.yaml]
        service_users[users-api-service.yaml]
        main_user[main.py]
        init_user[__init__.py]
        test_health[test_health.py]
        dockerfile[Dockerfile]
        requirements_user[requirements.txt]
    end

    cloud --> github
    cloud --> auth_service
    cloud --> monitoring
    cloud --> terraform
    cloud --> user_api
    cloud --> gitignore[.gitignore]
